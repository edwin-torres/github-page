{"version":3,"sources":["Nav.js","About.js","Projects/Projects.js","Projects/BreakoutGame.js","Projects/ChaosTriangle.js","Projects/Bubble.js","Projects/GameOfLife.js","App.js","serviceWorker.js","index.js"],"names":["Nav","navStyle","color","className","style","to","About","Projects","fontSize","textAlign","listStyle","Breakout","canvas","useRef","requestRef","useEffect","play","console","log","cancelAnimationFrame","current","ctx","getContext","b","score","lives","x","width","y","height","dx","dy","paddleX","paddleWidth","bricks","brickX","brickY","c","r","status","rightPressed","leftPressed","document","addEventListener","e","key","relativeX","clientX","offsetLeft","draw","clearRect","beginPath","arc","Math","PI","fillStyle","fill","closePath","rect","font","fillText","drawBricks","brickColumnCount","alert","location","reload","collisionDetection","requestAnimationFrame","href","target","rel","size","border","ref","Chaos","clearInterval","intervalRef","window","innerWidth","innerHeight","point1","point2","sqrt","point3","pointArr","drawCircle","moveTo","lineTo","strokeStyle","lineWidth","stroke","flag","drawArray","simulation","firstPoint","push","x1","y1","vertex","floor","random","length","newPoint","x2","y2","MidPoint","heightOfTriagle","H","newY","h","newX","drawRandomPoint","index","interval","setInterval","onClick","Bubble","useState","rowsArr","arr","randomNum","j","createRandomValue","COLUMNS","createRandomLenghts","randomNumbers","i","counter","Array","from","randomBubbleGrid","grid","setGrid","indexRef","iRef","counterRef","limit","ROWS","intervalObj","a","isSorted","temp","swapMember","createNewBubble","display","gridTemplateColumns","map","row","colo","backgroundColor","undefined","min","max","operations","GameOfLife","createRandomGrid","gridRef","updateGrid","newGrid","prevGrid","produce","gridDraft","createNewGrid","animate","update","gridCopy","aliveNeighbors","forEach","newI","newJ","checkNeighbors","Home","marginTop","src","process","alt","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.638f41c7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  const navStyle = {\r\n    color: \"white\",\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <h3>LOGO</h3>\r\n\r\n      <ul className=\"nav-links\">\r\n        <Link style={navStyle} to=\"/home\">\r\n          <li>Home</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/about\">\r\n          <li>About</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/projects\">\r\n          <li>Cool Stuff</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n\r\nexport function ProjectNav() {\r\n  const navStyle = {\r\n    color: \"white\",\r\n  };\r\n\r\n  return (\r\n    <nav className=\"projects-nav\">\r\n      <h3>ProjectNav</h3>\r\n\r\n      <ul className=\"nav-links\">\r\n        <Link style={navStyle} to=\"/\">\r\n          <li>Home</li>\r\n        </Link>\r\n\r\n        <Link style={navStyle} to=\"/projects/shop\">\r\n          <li>Shop</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/pokemon\">\r\n          <li>Pokemon</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/projects/breakout\">\r\n          <li>breakout</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/projects\">\r\n          <li>Projects</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\n \r\nimport './App.css';\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h1>About Page</h1>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n \r\nimport {Link} from 'react-router-dom';\r\n \r\nimport '../App.css';\r\n\r\nfunction Projects() {\r\n    const navStyle = {\r\n        color: 'blue',\r\n        fontSize:'2rem',\r\n        textAlign:'center',\r\n        listStyle:'none'\r\n        \r\n};\r\n  return (\r\n    <div>\r\n      <h1 >Below is my free time</h1>\r\n      <div>\r\n          \r\n      <div className=\"grid-container\">\r\n     \r\n    \r\n  \r\n\r\n    <div className = \"Card\">\r\n \r\n    <Link style = {navStyle} to = \"/projects/breakout\">\r\n                            <li >Breakout Game</li>\r\n    </Link>\r\n    </div>\r\n\r\n    \r\n    <div className = \"Card\">\r\n \r\n    <Link style = {navStyle} to = \"/projects/chaos\">\r\n                            <li >Chaos</li>\r\n    </Link>\r\n    </div>\r\n\r\n     \r\n    <div className = \"Card\">\r\n \r\n    <Link style = {navStyle} to = \"/projects/bubble\">\r\n                            <li >Bubble Sort</li>\r\n    </Link>\r\n    </div>\r\n    \r\n     \r\n    <div className = \"Card\">\r\n \r\n    <Link style = {navStyle} to = \"/projects/gol\">\r\n                            <li >Game of Life</li>\r\n    </Link>\r\n    </div>\r\n    \r\n  \r\n   \r\n     \r\n            \r\n            \r\n            </div>\r\n      </div>\r\n \r\n\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;","import React, { useRef, useEffect} from 'react';\r\n \r\nimport '../App.css';\r\n\r\nfunction Breakout() {\r\n\r\nlet canvas = useRef();\r\nconst requestRef = useRef();\r\n\r\nuseEffect(() => {\r\n \r\n  play();\r\n  console.log(\"Breakout MOUNTED\");\r\n\r\n  return () => {\r\n      cancelAnimationFrame(requestRef.current);\r\n      console.log(\"Breakout UNMONUNTED\");\r\n      \r\n\r\n    }\r\n//   return () => {\r\n//     cancelAnimationFrame(requestRef.current);\r\n//     window.location.reload();\r\n//   }\r\n}); // I was getting an error when accessesing a different route\r\n\r\n \r\n\r\nconst play = () => {\r\n              \r\n                let ctx = canvas.current.getContext(\"2d\");\r\n\r\n\r\n                       ///////////Some Params//////////\r\n                        let b = {};\r\n                        let score = 0;\r\n                        let lives = 3;\r\n                        /////////////////////Colors//////////////////////\r\n                        // let colorArray = ['yellow','red','green','black','aqua'];\r\n                        let color = 'white';\r\n                        let newColor = '';\r\n                        ////////////Ball///////////////\r\n                        let x  = canvas.current.width/2;\r\n                        let y = canvas.current.height-30;\r\n                        let dx = -2;\r\n                        let dy =-2;\r\n                        let ballRadius = 10;\r\n\r\n                        function drawBall(){\r\n                            ctx.beginPath();\r\n                            ctx.arc(x, y, ballRadius, 0, Math.PI*2);\r\n                            ctx.fillStyle = color;\r\n                            ctx.fill();\r\n                            ctx.closePath();\r\n                        }\r\n                        ////////////////Paddle////////////////\r\n                        let paddleHeight = 10;\r\n                        let paddleWidth = 85;\r\n                        let paddleX = canvas.current.width/2-paddleWidth/2;\r\n                        function drawPaddle(){\r\n                            ctx.beginPath();\r\n                            ctx.rect(paddleX, canvas.current.height-paddleHeight, paddleWidth,paddleWidth);\r\n                            ctx.fillStyle = color;\r\n                            ctx.fill();\r\n                            ctx.closePath();\r\n                        }\r\n                       \r\n\r\n                        ////////////////////////Bricks/////////////////////\r\n                        let brickRowCount = 3;\r\n                        let brickColumnCount = 5;\r\n                        let brickWidth = 75;\r\n                        let brickHeight = 10;\r\n                        let brickPadding = 10;\r\n                        let brickOffsetTop = 55;\r\n                        let brickOffsetLeft = 165;\r\n\r\n                        let bricks = [];\r\n                        let brickX = 0;\r\n                        let brickY = 0;\r\n\r\n                        for (let c = 0; c <  brickColumnCount; c++){\r\n                                bricks[c] = [];\r\n                                for(let r = 0; r < brickRowCount; r++){\r\n                                        bricks[c][r] = {x:0 , y:0, status: 1};\r\n                                }\r\n                        }\r\n\r\n\r\n\r\n                        function drawBricks(){\r\n\r\n\r\n                            for(let c = 0; c < brickColumnCount; c++){\r\n                                for(let r = 0; r < brickRowCount; r++){\r\n                                    if(bricks[c][r].status===1){\r\n                                        brickX = c*(brickWidth+brickPadding)+brickOffsetLeft;\r\n                                        brickY = r*(brickHeight+brickPadding)+brickOffsetTop;\r\n                                        bricks[c][r].x = brickX;\r\n                                        bricks[c][r].y = brickY;\r\n                                        ctx.beginPath();\r\n                                        ctx.rect(brickX,brickY,brickWidth,brickHeight);\r\n                                        ctx.fillStyle = \"white\";\r\n                                        ctx.fill();\r\n\r\n                                    }\r\n\r\n                                }\r\n                        }\r\n                        }\r\n\r\n                      \r\n\r\n                        ///////////////CollisionDetection/////////////////\r\n\r\n                        function collisionDetection(){\r\n                            for(let c = 0; c < brickColumnCount; c++){\r\n                                    for(let r = 0; r < brickRowCount; r++ ){\r\n                                        b = bricks[c][r];\r\n                                        if(b.status===1){\r\n                                            if(x>b.x && x<b.x+brickWidth && y>b.y && y<b.y+brickHeight){\r\n                                                dy = -dy;\r\n                                                b.status = 0;\r\n                                                score++;\r\n                                        }\r\n                                        if(score === brickColumnCount*brickRowCount){\r\n                                            alert(\"USER WINS!\\nScore: \" + score );\r\n                                            document.location.reload();\r\n                                            //clearInterval(interval);\r\n                                        }\r\n                                        }\r\n\r\n                                    }\r\n                            }\r\n                        }\r\n\r\n\r\n                        /////////////Score///////////////////\r\n\r\n\r\n                        function drawScore(){\r\n                            ctx.font = \"15px Arial\";\r\n                            ctx.fillStyle = \"white\";\r\n                            ctx.fillText(\"Score: \" + score, 8, 20);\r\n                        }\r\n\r\n\r\n                        //////////Lives/////////////////\r\n                        function drawLives(){\r\n                            ctx.font = \"15px Arial\";\r\n                            ctx.fillStyle = \"white\";\r\n                            ctx.fillText(\"Lives: \" + lives, canvas.current.width-65, 20);\r\n                        }\r\n\r\n\r\n                        //////////////UserControl//////////////////\r\n                        let rightPressed = false;\r\n                        let leftPressed = false;\r\n\r\n                        document.addEventListener(\"keydown\", keyDownHandler,false);\r\n                        document.addEventListener(\"keyup\", keyUpHandler,false);\r\n                      // document.addEventListener(\"mousemove\", mouseMoveHandler,false);\r\n                        canvas.current.addEventListener(\"mousemove\", mouseMoveHandler,false);\r\n                        \r\n\r\n                        function mouseMoveHandler(e){\r\n                              \r\n                                \r\n                                let relativeX = e.clientX-canvas.current.offsetLeft;\r\n                                if(relativeX > paddleWidth/4 && relativeX < canvas.current.width-paddleWidth/4){\r\n                                    paddleX = relativeX - paddleWidth/2;\r\n                                }\r\n\r\n                        }\r\n                        function keyDownHandler (e){\r\n                            if (e.key===\"Right\"||e.key===\"ArrowRight\"){\r\n                                rightPressed = true;\r\n                            }else{\r\n                                if(e.key===\"Left\"||e.key===\"ArrowLeft\"){\r\n                                    leftPressed = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        function keyUpHandler (e){\r\n                            if(e.key===\"Right\"||e.key===\"ArrowRight\"){\r\n                                rightPressed = false;\r\n                            }else{\r\n                                if(e.key===\"Left\"||e.key===\"ArrowLeft\"){\r\n                                    leftPressed = false;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n\r\n                        function draw() {\r\n                       \r\n                        ctx.clearRect(0,0,canvas.current.width,canvas.current.height);\r\n                        drawBall();\r\n                        drawPaddle();\r\n                        drawScore();\r\n                        drawLives();\r\n                        drawBricks();\r\n                        collisionDetection();\r\n\r\n\r\n                        //////////////Ball////////////////////////\r\n                        if(x+dx-ballRadius < 0 || x+dx+ballRadius > canvas.current.width){\r\n                            dx = -dx;\r\n                            //newColor = colorArray[ Math.floor( Math.random()*colorArray.length )];\r\n\r\n                        while(color === newColor){\r\n                        //newColor = colorArray[ Math.floor( Math.random()*colorArray.length )];\r\n\r\n                        }\r\n                        // color = newColor;\r\n                        // color = 'black';\r\n\r\n                        }\r\n                            if(y+dy-ballRadius<0){\r\n                            dy = -dy;\r\n                            }else{\r\n\r\n\r\n                                if(y+dy+ballRadius> canvas.current.height){\r\n                                    if(x>paddleX && x<paddleX+paddleWidth){\r\n                                        dy = -1.03*dy;\r\n                                    } else{\r\n                                        lives--;\r\n                                        if(lives===0){\r\n                                            alert(\"Game Over!\");\r\n                                            document.location.reload();\r\n\r\n                                        }else{\r\n                                                x  = canvas.current.width/2;\r\n                                                y = canvas.current.height-30;\r\n                                                dx = -2;\r\n                                                dy =-2;\r\n                                                paddleX = canvas.current.width/2-paddleWidth/2;\r\n                                        }\r\n\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n\r\n\r\n                        x = x + dx;\r\n                        y = y + dy;\r\n                        ///////////////////////Paddle////////////////////\r\n\r\n\r\n                        if(rightPressed===true){\r\n                            paddleX=paddleX+7;\r\n                            if(paddleX+paddleWidth>canvas.current.width){\r\n                                paddleX = canvas.current.width-paddleWidth;\r\n                            }\r\n                        }\r\n                        if(leftPressed===true){\r\n                            paddleX=paddleX-7;\r\n                            if(paddleX<0){\r\n                                paddleX = 0;\r\n                            }\r\n                        }\r\n\r\n\r\n                        requestRef.current  = requestAnimationFrame(draw);\r\n                        }\r\n\r\n\r\n\r\n                        draw();\r\n\r\n                                                \r\n\r\n\r\n                \r\n}\r\n\r\n  return (\r\n      \r\n <div>\r\n<div>\r\n<h1>Breakout</h1>\r\n{/* <div className =\"btn\">\r\n<button onClick = {play} >Play Game</button>\r\n\r\n</div> */}\r\n\r\n\r\n</div>\r\n  \r\n<div style = {{color: \"NavajoWhite\"}}>\r\n              \r\n              <ul style = {{listStyle: \"none\", textAlign: \"left\", fontSize: \"1.75rem\"}}>\r\n                <li> Following this <a className = \"link\" href=\"https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\" target=\"_blank\"  rel = \"noopener noreferrer\"> canvas tutorial</a>.</li>\r\n             </ul>\r\n        </div>\r\n \r\n      <canvas\r\n        style={{\r\n          size: \"100%\",\r\n          border: \"10px solid #333030\",\r\n        }}\r\n        ref={canvas}\r\n        width= \"750\"\r\n        height= \"500\"\r\n   \r\n      />\r\n\r\n\r\n\r\n    \r\n    </div>\r\n \r\n  );\r\n}\r\n\r\nexport default Breakout;\r\n\r\n\r\n ","import React, { useRef, useEffect} from 'react';\r\n \r\nimport '../App.css';\r\n\r\nfunction Chaos() {\r\n\r\n  useEffect(() => {\r\n    //requestRef.current = requestAnimationFrame(draw);\r\n    return () => {\r\n      \r\n      clearInterval(intervalRef.current);\r\n    }\r\n  }); // I was getting an error when accessesing a different route\r\n\r\n\r\n    \r\n\r\n\r\nlet canvas = useRef(); \r\n\r\n\r\n\r\nconst play = () => {\r\n              \r\n                      let ctx = canvas.current.getContext(\"2d\");\r\n\r\n        \r\n                                            \r\n                    canvas.current.width = window.innerWidth;\r\n                    canvas.current.height = .80*window.innerHeight;\r\n                    \r\n                  \r\n                    /////////Three Vertices//////\r\n                    let point1 = {\r\n                        x: canvas.current.width/2,\r\n                        y: canvas.current.height/10\r\n                    }\r\n                    let point2= {\r\n                        x: canvas.current.width/2-(6*canvas.current.height/10)/(Math.sqrt(3)),\r\n                        y: 7*canvas.current.height/10\r\n                    }\r\n                    let point3 = {\r\n                        x: canvas.current.width/2+(6*canvas.current.height/10)/(Math.sqrt(3)),\r\n                        y: 7*canvas.current.height/10\r\n                    }\r\n                    let pointArr = [point1,point2,point3];\r\n    \r\n\r\n\r\n\r\n\r\n                    ///////////Triangle//////////////\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(point1.x,point1.y);\r\n                    ctx.lineTo(point2.x,point2.y);\r\n                    ctx.lineTo(point3.x,point3.y);\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = \"#ff5100\";\r\n                    ctx.lineWidth = 5;\r\n                    ctx.stroke();\r\n                    ctx.closePath();               \r\n\r\n                    //////Points/////////\r\n                    function drawCircle(x,y){\r\n                        ctx.beginPath();\r\n                        ctx.arc(x, y,4, 0, 2 * Math.PI);\r\n                        ctx.fillStyle = 'white';\r\n                        ctx.fill();\r\n                    }\r\n\r\n                function drawRandomPoint(){\r\n\r\n                    let heightOfTriagle = point2.y - point1.y;\r\n                    let H = Math.random()*heightOfTriagle;\r\n                    let newY = point1.y + H;\r\n                    let h = newY - point1.y;\r\n                    let newX = point3.x * Math.random();\r\n\r\n                    while(newX<(point1.x-h/(Math.sqrt(3))) || newX>(point1.x+h/(Math.sqrt(3))) ){\r\n                        newX = point3.x * Math.random();\r\n                    }\r\n                \r\n                    drawCircle(newX,newY);\r\n                    \r\n                    return [newX,newY]\r\n            }\r\n\r\n            function pickRandomVertex(){\r\n                let vertex = pointArr[Math.floor(Math.random()*pointArr.length)];\r\n                return vertex;\r\n            }\r\n       \r\n            function  MidPoint(x1,y1,x2,y2) {\r\n                                let firstX = x1;\r\n                                let firstY = y1;\r\n                                let secondX = x2;\r\n                                let secondY = y2;\r\n\r\n                                return [(firstX+secondX)/2,(firstY+secondY)/2];\r\n            }\r\n            \r\n            let flag = 0;\r\n            let drawArray = [];//Points insdie Triangle\r\n\r\n            function simulation(firstPoint){\r\n                    \r\n                    ///////////pushing to draw array///////////////\r\n                    drawArray.push(firstPoint);\r\n                    let x1= firstPoint[0];\r\n                    let y1 = firstPoint[1];\r\n\r\n                    let vertex = pickRandomVertex();         \r\n                    let x2 = vertex.x;\r\n                    let y2 = vertex.y;\r\n\r\n                    let newPoint =  MidPoint(x1,y1,x2,y2);\r\n                    drawArray.push(newPoint);\r\n                   \r\n            \r\n                        while(flag !== 3500){\r\n                        flag++;\r\n                        simulation(newPoint);\r\n                     }       \r\n            }\r\n\r\n            let pointInside = drawRandomPoint();\r\n            simulation(pointInside);\r\n\r\n            let index = 0;\r\n\r\n            ////////Draw Points/////////\r\n            let interval = setInterval(function(){\r\n\r\n            drawCircle(drawArray[index][0], drawArray[index][1]);\r\n            index = index + 2;//points repeat\r\n            console.log(\"Hello\");\r\n\r\n            if (index > 3500) {\r\n               \r\n                 clearInterval(interval);\r\n            }\r\n\r\n            },25);\r\n            intervalRef.current = interval;\r\n}\r\nlet intervalRef = useRef(null);\r\nfunction stop(){\r\n  clearInterval(intervalRef.current);\r\n}\r\n  return (\r\n      \r\n        <div>\r\n        <div>\r\n            <h1>Chaos Game</h1>\r\n            <div className =\"btn\">\r\n            <button onClick = {() => {\r\n                play();\r\n             \r\n            }} >Start Chaos</button>\r\n              <button onClick = {() => {\r\n                stop();\r\n             \r\n            }} >Stop</button>\r\n\r\n        </div>\r\n\r\n\r\n        </div>\r\n  \r\n\r\n        <div style = {{color: \"NavajoWhite\"}}>\r\n              \r\n              <ul style = {{listStyle: \"none\", textAlign: \"left\", fontSize: \"1.75rem\"}}>\r\n                <li> I made this after watching <a className = \"link\" href=\"https://www.youtube.com/watch?v=IGlGvSXkRGI\" target=\"_blank\"  rel = \"noopener noreferrer\"> this video</a>.</li>\r\n                <li> You can find more information here: <a className = \"link\" href=\"https://en.wikipedia.org/wiki/Chaos_game\" target=\"_blank\" rel = \"noopener noreferrer\"> Chaos game</a>. </li>\r\n              </ul>\r\n        </div>\r\n \r\n        \r\n\r\n      <canvas\r\n        style={{\r\n          size: \"100%\",\r\n          border: \"10px solid black\",\r\n        }}\r\n        ref={canvas}\r\n        width= \"1\"\r\n        height= \"1\"\r\n      />\r\n  \r\n    </div>\r\n \r\n  );\r\n}\r\n\r\nexport default Chaos;\r\n\r\n\r\n "," \r\n\r\n import React, { useState, useRef, useEffect } from 'react';\r\n import '../App.css';\r\n\r\n const ROWS = 35;\r\n const COLUMNS = 5;\r\n\r\n\r\n\r\n\r\n   function Bubble() {\r\n     \r\n      \r\n   \r\n     const [grid,setGrid] = useState(() => {return randomBubbleGrid();});\r\n   \r\n     let gridRef = useRef();\r\n     gridRef.current = grid;\r\n     \r\n     let indexRef = useRef(0);\r\n     let arr = randomNumbers;\r\n     let iRef = useRef(0);\r\n     \r\n     let counterRef = useRef(0);\r\n     let intervalRef = useRef();\r\n\r\n     useEffect(()=>{\r\n           console.log(\"BUBBLE MONUNTED\");\r\n     return () => {\r\n           console.log(\"RN at UNMOUNT\", randomNumbers);\r\n           randomNumbers = [];\r\n           clearInterval(intervalRef.current);\r\n           console.log(\"BUBBLE UNMONUNTED\");\r\n     }\r\n       },[]);\r\n   \r\n\r\n     function play () {\r\n                     console.log(randomNumbers);\r\n                     let limit = ROWS-2;\r\n                     let flag = -1;\r\n\r\n                     let intervalObj =  setInterval(()=>{          \r\n                       iRef.current = iRef.current%ROWS;\r\n                       flag++;\r\n                    \r\n                                     if(!isSorted(arr)){\r\n                                       \r\n                                               if( comparison(arr[iRef.current],arr[iRef.current+1])){\r\n                         \r\n                                                   swapMember(arr,iRef.current,iRef.current+1);\r\n\r\n                                                   setGrid(createNewBubble(arr));\r\n                                   \r\n                                               } \r\n                   \r\n                                   }\r\n                                 \r\n                                   if(flag < limit){\r\n                                       iRef.current++;\r\n                                   }else{\r\n                                       flag = -1;\r\n                                       limit--;\r\n                                       iRef.current = 0;\r\n                                   }\r\n\r\n                                   if(isSorted(arr)){\r\n                                       clearInterval(intervalObj);\r\n                                   }\r\n           \r\n                       indexRef.current++;\r\n                       counterRef.current++;\r\n\r\n                       if(counterRef.current === ROWS*ROWS){\r\n                           clearInterval(intervalObj);\r\n                       }\r\n         \r\n                   },25);\r\n\r\n                 intervalRef.current = intervalObj;\r\n       }\r\n   \r\n     return (\r\n       <> \r\n         <div>\r\n         <h1>Bubble Sort</h1>\r\n\r\n           </div>\r\n       \r\n           <div className =\"btn\"> \r\n                 <button onClick = {() => {\r\n                   play();\r\n                 }}>Sort!</button>\r\n         \r\n                 <button onClick = {() => {\r\n                   clearInterval(intervalRef.current);\r\n                   window.location.reload();\r\n             \r\n                 }}>Refresh</button>\r\n         </div>\r\n         \r\n     {/* Here is the Grid */}\r\n       <div className = \"gol-grid-container\">\r\n                 <div style  = {{\r\n                   display: \"grid\",\r\n                   gridTemplateColumns: `repeat(${COLUMNS},20px)`\r\n                 }}\r\n             >\r\n           {/* This creates the individual boxes */}\r\n               {grid.map((row, i) =>  (\r\n                   \r\n                         row.map((colo,j) => (\r\n                           \r\n                         <div key = {i-j}\r\n                         style = {{\r\n                           width: 20,\r\n                           height: 20,\r\n                           backgroundColor: grid[i][j] ? \"#7FFFD4\" : undefined,\r\n                           border: \"solid 1px sienna\"\r\n                         }}\r\n\r\n                       >\r\n\r\n                     </div>))))\r\n                 }\r\n\r\n             </div>\r\n\r\n       </div>\r\n         \r\n           \r\n         <div style = {{color: \"NavajoWhite\"}}>\r\n                 \r\n                 <ul style = {{listStyle: \"none\", textAlign: \"left\", fontSize: \"1.75rem\"}}>\r\n                   <li> This is a visualization of the <a className = \"link\" href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\" target=\"_blank\"  rel = \"noopener noreferrer\">Bubble Sort</a> algorithm. </li> \r\n                   <li> With luck, you'll be able to see some bubbles go up. </li> \r\n                \r\n                 </ul>\r\n         </div>\r\n\r\n       </> \r\n\r\n\r\n     );\r\n   }\r\n\r\nexport default Bubble;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n function createRandomValue(min,max){\r\n       return Math.floor(Math.random()*(max-min)+min);\r\n }\r\n\r\n\r\n function createRandomLenghts(arr) {\r\n         let randomNum;\r\n         for (let j = 0; j < ROWS; j++) {\r\n               randomNum = createRandomValue(1,COLUMNS+1);\r\n               while(j>0 && arr[j-1]===randomNum){\r\n                   randomNum = createRandomValue(1,COLUMNS);\r\n               }\r\n               \r\n                   arr.push(randomNum);\r\n         }\r\n }\r\n\r\n function comparison(a,b){\r\n         return a>b?true:false;\r\n }\r\n\r\n function swapMember(arr,x,y){\r\n         let temp = arr[x];\r\n           arr[x] = arr[y];\r\n           arr[y] = temp;  \r\n           return arr;\r\n }\r\n \r\n function isSorted(arr){\r\n         for(let i = 0; i < arr.length-1;i++){\r\n             if(arr[i]>arr[i+1]){\r\n                 return false;\r\n             }\r\n         }\r\n         return true;\r\n }\r\n\r\n\r\n    let randomNumbers = [];\r\n\r\n   function randomBubbleGrid(){\r\n       let rowsArr = [];\r\n     \r\n      createRandomLenghts(randomNumbers);\r\n   \r\n       for(let i = 0; i < ROWS; i++){\r\n               let length=randomNumbers[i];\r\n               \r\n               let counter =0;\r\n\r\n               rowsArr.push(Array.from(Array(COLUMNS), () => {\r\n                 \r\n                         if(counter<length){\r\n                             \r\n                             counter++;\r\n                             return 1;\r\n                         }else{\r\n                           \r\n                             return 0;\r\n                         }\r\n               }));\r\n\r\n   }\r\n   return rowsArr;\r\n   }\r\n\r\n   function createNewBubble(arr){\r\n           let rowsArr = [];\r\n             \r\n           for(let i = 0; i < ROWS; i++){\r\n                   let length=arr[i];  \r\n                   let counter =0;\r\n\r\n                   rowsArr.push(Array.from(Array(COLUMNS), () => {\r\n                     \r\n                             if(counter<length){\r\n                                 \r\n                                 counter++;\r\n                                 return 1;\r\n\r\n                             }else{             \r\n                                 return 0;\r\n                             }\r\n                   }));\r\n       }\r\n       return rowsArr;\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport produce from 'immer';   //immutable grid object\r\n \r\nimport '../App.css';\r\n\r\n//Ben Awad tutorial\r\n//Here, I learned the difference between mutable and immutable objects and how to use \"immer\"\r\n//https://www.youtube.com/watch?v=DvVt11mPuM0\r\n\r\nconst ROWS = 10;\r\nconst COLUMNS = 15;\r\n\r\nconst operations = [\r\n  [0,-1], [0,1], [-1,0], [1,0], [1,1], [-1,-1], [-1,1], [1,-1]\r\n];\r\n\r\n\r\nfunction GameOfLife() {\r\n \r\n\r\n  const [grid,setGrid] = useState(() => {return createRandomGrid();});\r\n\r\n  let gridRef = useRef();\r\n  gridRef.current = grid;\r\n\r\n\r\n  function updateGrid(i,j){\r\n        let newGrid = createNewGrid(  gridRef.current , i,j);\r\n        setGrid(newGrid);\r\n  }\r\n     \r\n\r\n  function animate () {\r\n        let update = checkNeighbors(gridRef.current);\r\n        setGrid(update);\r\n  }\r\n\r\n let intervalRef = useRef();\r\n\r\nuseEffect(() => {\r\n        //Loop\r\n        let interval = setInterval(() => {\r\n          animate();\r\n        }, 750);\r\n        intervalRef.current = interval;\r\n},[]);\r\n\r\nuseEffect(() => {\r\n   \r\n        return () => {\r\n      clearInterval(intervalRef.current);\r\n        }\r\n\r\n},[]); // I was getting an error when accessesing a different route\r\n\r\n\r\n  return (\r\n    <> \r\n      <div>\r\n      <h1>Conway's Game of Life</h1>\r\n              <div style = {{color: \"NavajoWhite\"}}>\r\n              \r\n                      <ul style = {{listStyle: \"none\", textAlign: \"left\", fontSize: \"1.75rem\"}}>\r\n  \r\n                       <li style = {{color: \"#ff5100\"}}>Rules: </li>   \r\n                        <li>Any live cell with two or three live neighbors survives.</li>   \r\n                        <li>Any dead cell with three live neighbors becomes a live cell.</li>   \r\n                        <li>All other live cells die in the next generation. Similarly, all other dead cells stay dead.</li>\r\n \r\n                       </ul>\r\n              </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n      <div className =\"btn\"> \r\n              <button onClick = {() => {\r\n                setGrid(  createRandomGrid() );\r\n              }}>Restart</button>\r\n      </div>\r\n\r\n   {/* Here is the Grid */}\r\n    <div className = \"gol-grid-container\">\r\n              <div style  = {{\r\n                display: \"grid\",\r\n                gridTemplateColumns: `repeat(${COLUMNS},60px)`\r\n              }}\r\n          >\r\n        {/* This creates the individual boxes */}\r\n            {grid.map((row, i) =>  (\r\n                \r\n                      row.map((colo,j) => (\r\n                        \r\n                      <div key = {i-j}\r\n                      style = {{\r\n                        width: 60,\r\n                        height: 60,\r\n                        backgroundColor: grid[i][j] ? \"#7FFFD4\" : undefined,\r\n                        border: \"solid 1px sienna\"\r\n                      }}\r\n                      onClick = {(e) => {         \r\n                      updateGrid(i,j);\r\n                      }}\r\n\r\n                    >\r\n\r\n                  </div>))))\r\n              }\r\n\r\n          </div>\r\n          \r\n\r\n\r\n    </div>\r\n       \r\n        \r\n      <div style = {{color: \"NavajoWhite\"}}>\r\n              \r\n              <ul style = {{listStyle: \"none\", textAlign: \"left\", fontSize: \"1.75rem\"}}>\r\n                <li> You can find more info   <a className = \"link\" href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\" target=\"_blank\"  rel = \"noopener noreferrer\">here</a>. </li>\r\n                <li> I used <a className = \"link\" href=\"https://www.youtube.com/watch?v=DvVt11mPuM0\" target=\"_blank\" rel = \"noopener noreferrer\"> this tutorial</a>  by Ben Awad.</li>\r\n\r\n              </ul>\r\n      </div>\r\n\r\n    </> \r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GameOfLife;\r\n\r\n\r\n\r\n\r\n// Grid \r\nfunction createRandomGrid() {\r\n   \r\n  let rowsArr = [];\r\n \r\n \r\n  for(let i = 0; i < ROWS; i++){\r\n           rowsArr.push(Array.from(Array(COLUMNS), () => {\r\n             if(Math.random() < .5){\r\n                 return 0;\r\n             }else{\r\n               return 1;\r\n             }\r\n           }));\r\n  }\r\n  return rowsArr;\r\n }\r\n\r\n\r\n\r\n\r\n \r\n function createNewGrid(prevGrid,i,j) {\r\n\r\n  //We pass our current 'grid'. We can change the gridDraft anyway we want\r\n  // immer 'produce' takes care of producing immutable grid \r\n   let newGrid = produce(prevGrid, gridDraft => {\r\n     \r\n     gridDraft[i][j] = gridDraft[i][j] ? 0:1;\r\n \r\n   }); \r\n   \r\n   return newGrid;\r\n  }\r\n \r\n \r\n function checkNeighbors(grid){\r\n \r\n   \r\n     let nextGen = produce(grid, gridCopy => {\r\n         for(let i = 0; i < ROWS; i++){\r\n           for(let j = 0; j < COLUMNS; j++){\r\n    //Neighbor computation\r\n                   let aliveNeighbors = 0;\r\n                   operations.forEach(([x,y]) => {\r\n                             const  newI = i +x;\r\n                             const newJ = j+y;\r\n                               if(newI >= 0 && newJ >= 0 && newI < ROWS && newJ < COLUMNS){\r\n                                     aliveNeighbors = aliveNeighbors + grid[newI][newJ];\r\n                               }\r\n \r\n                   } );\r\n                   if(aliveNeighbors<2 || aliveNeighbors>3){\r\n                //Neighbors Die\r\n                     gridCopy[i][j] = 0;\r\n                 }else if (grid[i][j]===0 && aliveNeighbors ===3){\r\n                //Neighbors Resurect \r\n                   gridCopy[i][j]=1;\r\n                 }\r\n \r\n           }\r\n     }\r\n       });\r\n    \r\n return nextGen;\r\n }","import React from 'react';\nimport Nav from './Nav';\nimport About from './About';\nimport Projects from './Projects/Projects';\nimport Breakout from './Projects/BreakoutGame';\nimport Chaos from './Projects/ChaosTriangle';\nimport Bubble from './Projects/Bubble';\nimport GameOfLife from './Projects/GameOfLife';\n\nimport {HashRouter  as Router, Switch, Route, Redirect} from 'react-router-dom';\n \nimport './App.css';\n\nfunction App() {\n  return (\n    <Router >\n    <div className = \"App\">\n              <Nav />\n      \n              <Switch>\n              <Redirect\n              exact\n              from=\"/\"\n              to=\"/home\"            \n            />\n                    <Route path = \"/home\" exact component = {Home} />\n                    <Route path = \"/about\"  exact component = {About} />\n                        <Route path = \"/projects\" exact component = {Projects} />\n                        <Route path = \"/projects/breakout\" exact component = {Breakout} />\n                        <Route path = \"/projects/chaos\" exact component = {Chaos} />\n                        <Route path = \"/projects/bubble\" exact component = {Bubble} />\n                        <Route path = \"/projects/gol\" exact component = {GameOfLife} />\n                  \n                   \n              </Switch>\n    </div>\n</Router>\n  );\n}\n\n\n\nconst Home = () => (\n  <div>\n    <div style = {{marginTop:\"1.5%\"}}>\n   \n    <img src={process.env.PUBLIC_URL + '/images/Edwin.jpg'} className = \"responsive\"  alt = \"me\"/> \n    <p>My names is Edwin.  I'm a <em>Dreamer</em> learning to code. </p>\n    <p>I also teach math at Laredo College. </p>\n\n    </div>\n  \n    </div>\n\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}